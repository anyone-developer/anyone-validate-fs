on:
  push:
    branches:
      - main
name: release-build
jobs:
  npm-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm test
  dry-run-action-test:
    needs: npm-test
    runs-on: ubuntu-latest
    name: dry run action test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - run: npm ci
      - name: Check xo formatter
        run: npm run xo
      - name: validate-fs
        uses: ./
        id: validation
        with:
          brace-expansion: "{a,b/{ba1,ba2,bb1,bb2},c,d}/{a.qa.config,b.prd.config}"
          ignore-files: "README.md"
          ignore-directories: ".git"
          read-path: "./sample_folder"
          render-layout: "vertical"
  release-build:
    needs: dry-run-action-test
    name: release-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup node environment
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Versioning Package
        run: npm version patch
      - name: Build project
        run: npm run build
      - name: Package artifact
        run: |
          mv build/release/anyone-validate-fs-win.exe anyone-validate-fs-win.exe && zip windows.zip anyone-validate-fs-win.exe
          mv build/release/anyone-validate-fs-macos anyone-validate-fs-macos && zip macos.zip anyone-validate-fs-macos
          mv build/release/anyone-validate-fs-linux anyone-validate-fs-linux && zip linux.zip anyone-validate-fs-linux
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: regular-release/#${{ github.run_number  }}
          release_name: Regular release(#${{ github.run_number }})
          draft: true
          prerelease: true
      - name: Upload Windows artifact
        id: upload-windows-artifact 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows.zip
          asset_name: windows.zip
          asset_content_type: application/zip
      - name: Upload Macos artifact
        id: upload-macos-artifact 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos.zip
          asset_name: macos.zip
          asset_content_type: application/zip
      - name: Upload Linux artifact
        id: upload-linux-artifact 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux.zip
          asset_name: linux.zip
          asset_content_type: application/zip
      # I need another action to create choco environment from windows.
      # - name: Upload Package to Chocolatey
      #   run: |
      #      choco apikey --key ${{ secrets.CHOCOLATEY_API_KEY }} --source https://push.chocolatey.org/
      #      choco push MyPackage.${{ github.run_number }}.nupkg --source https://push.chocolatey.org/
  publish-npm:
    needs: dry-run-action-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
          scope: '@anyone-developer'
      - name: Versioning Package
        run: npm version patch    
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  publish-gpr:
    needs: dry-run-action-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
          scope: '@anyone-developer'
      - name: Versioning Package
        run: npm version patch
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  update-version:
    needs: [release-build, publish-npm, publish-gpr]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup node environment
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Versioning Package
        run: npm version patch
      - name: Import GPG
        id: gpg
        uses: crazy-max/ghaction-import-gpg@v3.0.1
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          git-user-signingkey: true
          git-commit-gpgsign: true
      - name: Push changes to remote
        id: create-push-change
        uses: anyone-developer/anyone-push-back-repo@main
        with:
          strategy-option: ours
          actor: Edward-Roshan
          actor-email:  zhang_nan_163@163.com
  